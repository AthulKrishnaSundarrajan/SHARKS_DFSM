function [Y,Xf,Af] = mynet(X,~,~)
%MYNET neural network simulation function.
%
% Auto-generated by MATLAB, 11-Apr-2022 19:56:36.
% 
% [Y] = mynet(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 2xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.735271938219595;6.18103575557613;-0.285210979426037;-0.228940413240521;11.4066989496455;18168.4109207471;7.85405868282607];
x1_step1.gain = [0.446813391204248;0.855699444148657;3.23915667072723;4.27170582053066;0.24886284523537;0.00114341486125168;0.2592838631075];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.81603316244046830708;-1.231455949660324567;1.4104660307608947178;-0.14312901557688864629;0.47977259762647916919;-0.74186896527034185134;-0.3199182180385820029;-0.34963740082363953254;-0.31149333842815951634;-0.80337457483178509321];
IW1_1 = [-1.3077984568508369545 0.49773364606800674093 0.50605478713933449431 -0.28677777027672601839 1.0693299172325783086 0.45462333543687727389 0.46630061433825664707;-0.6479971798648980208 0.50068590225272369132 0.7297742656091924518 0.24970022059023758154 -1.1947802062783563493 1.5236996561061759703 -4.3577098638915643392;-1.5252985306170099289 -1.0514172102010361787 1.1347667468884883313 0.53700130803848777905 -1.1978366296862736906 -1.1557953501166238208 0.72769028019095705062;-1.2027572274697888588 0.88304300634844545836 0.27556360613901337286 0.0057217899757359179727 0.066563894739371479159 -0.19021880377600994261 -0.27878150491800374189;1.0205449707683293958 0.16994711711201204718 -0.56477039649699734003 0.2791603710799394622 0.053417595461117170497 -1.6545651297947920888 1.0116753572185110954;-0.9922539969944987881 0.95610361599618776118 0.5624485870790757458 -0.067217261294672439598 0.3787539888034812674 0.075459781286797533717 0.12771370210852447946;0.22631565733096198345 -0.37094361878659182219 0.49156306995844251118 0.20357499693845013122 -0.39156254958559477686 0.14211787050062649196 -2.2962437346907531577;-1.8235129950472350746 0.88643806737508568094 -0.69190060666703057102 0.600906788193871777 -1.7821721547555369192 0.17850843891417725318 0.46114866342523908038;1.6447118812292784717 -0.91479568669172095507 0.052101811837076641987 0.089644376932299374428 -0.26167744470150616776 0.52235138349519749656 1.0857807716128411446;1.3276766020985009131 -1.1901093532734203784 -0.21549390955594388553 -0.30627887147192101036 1.3362807137479015829 -0.64612001527271623047 3.9208446761364048605];

% Layer 2
b2 = [1.1782252727014455029;-0.41930750386492543491;-0.51665827426184596227;-1.4476329385235022773;-1.5051151565398128707;-3.3808235446745604769;-0.56654853943370220293;0.56413061574261003095;2.126683062836776994;1.235466620489743983];
LW2_1 = [-0.65841464055216436524 1.1162997335100131036 0.058292200726543667855 1.9387471313930038086 0.8798581313814715088 -0.71216315522688300454 -1.003327572262900258 -0.10267408470045837066 0.80264964004608707615 -0.75753370791709351284;-0.17345810552551901851 0.4962187025243273153 -0.59463581233818263438 5.3938470744776640942 -1.6420201190958039206 -3.328304676938062201 0.64370693125543299029 0.066711344416636633725 2.1953431018114595297 1.5801541072253149078;-0.29914222545690299926 -0.19968605312555423592 0.55385581000388528494 1.3225132274238975416 -0.74777886061516685157 -0.41083240239412238681 -0.50728001216643769933 -0.21926471766874525149 1.0800320560544833803 -0.033037247017442226971;2.3342317516722328463 -1.2672786320332398713 0.33502663263463022814 -10.769611377974223743 -1.9008242053347090827 5.3074650065884112493 1.6823507845165253105 1.2503382953199193572 -2.3620559334159709763 -0.91272487859496631568;-0.62818377789608448314 0.68291771031533765601 0.084886178613741383736 2.8913810769910992526 -0.95503247103726307543 -1.5653114019930725043 -0.86970429779281688276 -0.29359054607095508294 1.406508918254213425 -0.51694243415847584977;6.0190620376223664678 -1.1654554816279312224 0.67954552986116578683 -16.203623347404843003 0.18556098606100571158 -0.17069112934982294538 6.630887449468858108 5.8160020336420474862 -7.5949878723515782397 1.8315853268133850396;-0.3798405313113011883 0.45364845918475482645 -0.22924439559551018641 0.10423758788519113527 -0.0161552657846229554 0.26463593147143943396 -0.45064602552479293696 0.066407813848156221903 0.062375067445662422949 -0.011667441750603659706;-1.4227078806849902115 2.4249412340107880937 -0.62174082820982679021 -2.7750086336495609629 2.2342559382856301831 2.4022786462880949543 -1.4502595144380143743 -0.50377077932605007771 -3.1280914407508819686 -0.66639421790895536635;-1.0806400073625404001 -0.25223362512400432367 2.4335582844060077434 -12.206817167479691477 4.6340962784781876138 4.9336005260522499682 -3.0375566334611479036 -1.4306873882956627764 -10.193006895812203538 -2.2103933394159573922;-0.37104341104146043584 -0.50019179341633868141 -0.10348958565119208142 -4.6296964361629582285 -0.18868894414557707551 2.6917272568940440181 0.80785740307392184256 0.56442140377855887223 -0.51843153801240737799 -0.93646155068305692026];

% Layer 3
b3 = [-0.931741194513051596;-0.66969107771775193694];
LW3_2 = [0.90854591552111996222 0.29932546990189462521 0.23812976299585861262 0.068737411759952612988 -0.72986301241911177851 0.044703726770086632536 -0.5086574586339716042 0.052952580401939640387 0.08795573121154544316 -0.51289238730075770167;-5.7203306916559073514 -3.9742229397720705286 -5.5690810111823045858 3.0145231958104958814 7.1642917330483664173 -0.30621813576601725204 -12.167818087658336168 2.4727256928855561036 -0.57930057446080562844 -2.909484587468268213];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [7.40474082218311;1.24689681888286];
y1_step1.xoffset = [-0.112664213457267;-0.779648313935726];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
